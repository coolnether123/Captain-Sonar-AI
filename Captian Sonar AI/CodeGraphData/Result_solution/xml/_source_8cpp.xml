<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_source_8cpp" kind="file">
    <compoundname>Source.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">thread</includes>
    <includes local="no">future</includes>
    <includes local="no">exception</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">ctime</includes>
    <includes local="no">time.h</includes>
    <includes local="no">windows.h</includes>
    <incdepgraph>
      <node id="3">
        <label>iomanip</label>
      </node>
      <node id="10">
        <label>windows.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="6">
        <label>exception</label>
      </node>
      <node id="5">
        <label>future</label>
      </node>
      <node id="8">
        <label>ctime</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="1">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>thread</label>
      </node>
      <node id="0">
        <label>C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp</label>
        <link refid="Source.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AIDifficulty</definition>
        <argsstring></argsstring>
        <name>AIDifficulty</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="16" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="16" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" compoundref="_source_8cpp" startline="154" endline="172">setDifficulty</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int input2</definition>
        <argsstring></argsstring>
        <name>input2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="17" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" compoundref="_source_8cpp" startline="154" endline="172">setDifficulty</referencedby>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1aadbf03975135869a2790a416962121d9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int runCount</definition>
        <argsstring></argsstring>
        <name>runCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="18" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="18" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" compoundref="_source_8cpp" startline="44" endline="64">noNoAreas</referencedby>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mapWriteCount</definition>
        <argsstring></argsstring>
        <name>mapWriteCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="19" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="19" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int pathSection</definition>
        <argsstring></argsstring>
        <name>pathSection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="20" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="22" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="23" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a76777b356ab2a080225682528119c4fe" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="24" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="24" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float AIPosition</definition>
        <argsstring></argsstring>
        <name>AIPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="26" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1af7cad35aa8f546b41f3ae0dcc66e236c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float AIYPosition</definition>
        <argsstring></argsstring>
        <name>AIYPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="27" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1aaf161887666f0e3733b6d9153c47f9e7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float AIXPosition</definition>
        <argsstring></argsstring>
        <name>AIXPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="28" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float DeadZones[100]</definition>
        <argsstring>[100]</argsstring>
        <name>DeadZones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="30" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="30" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" compoundref="_source_8cpp" startline="44" endline="64">noNoAreas</referencedby>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float AIPath[20]</definition>
        <argsstring>[20]</argsstring>
        <name>AIPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="31" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nextPath</definition>
        <argsstring></argsstring>
        <name>nextPath</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="32" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a553a3ebce52098537a6c23da68c08c02" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string mapInput</definition>
        <argsstring></argsstring>
        <name>mapInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="34" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a38deedb02dcebac366f97a0879b3be5b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char input</definition>
        <argsstring></argsstring>
        <name>input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="36" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="176" endline="204">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a991cbe3d6b3162a30b540fa5b28cdca0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool XorY</definition>
        <argsstring></argsstring>
        <name>XorY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="38" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a2c2a512cd32842742d7f2b87c3ee60cb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool added</definition>
        <argsstring></argsstring>
        <name>added</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="39" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool positionDone</definition>
        <argsstring></argsstring>
        <name>positionDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="40" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool writePathDone</definition>
        <argsstring></argsstring>
        <name>writePathDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="41" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool menuDone</definition>
        <argsstring></argsstring>
        <name>menuDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="42" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="176" endline="204">main</referencedby>
        <referencedby refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" compoundref="_source_8cpp" startline="154" endline="172">setDifficulty</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool noNoAreas</definition>
        <argsstring>(float enterZone, int x, int y)</argsstring>
        <name>noNoAreas</name>
        <param>
          <type>float</type>
          <declname>enterZone</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="44" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="44" bodyend="64"/>
        <references refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" compoundref="_source_8cpp" startline="30">DeadZones</references>
        <references refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" compoundref="_source_8cpp" startline="18">runCount</references>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1aab71e43233c0bb41334ffc0e35400cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AIEasyDifficultyPath</definition>
        <argsstring>(int num)</argsstring>
        <name>AIEasyDifficultyPath</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="65" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="65" bodyend="75"/>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1a577dc0d6f138eeec92c0c13c052c3b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AINormalDifficultyPath</definition>
        <argsstring>()</argsstring>
        <name>AINormalDifficultyPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="76" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="76" bodyend="78"/>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1a5b3fcf3a700ba700265cf3ed21294d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AIHardDifficultyPath</definition>
        <argsstring>()</argsstring>
        <name>AIHardDifficultyPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="79" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="79" bodyend="81"/>
        <referencedby refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writePath</definition>
        <argsstring>()</argsstring>
        <name>writePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="82" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="82" bodyend="112"/>
        <references refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" compoundref="_source_8cpp" startline="16">AIDifficulty</references>
        <references refid="_source_8cpp_1aab71e43233c0bb41334ffc0e35400cf4" compoundref="_source_8cpp" startline="65" endline="75">AIEasyDifficultyPath</references>
        <references refid="_source_8cpp_1a5b3fcf3a700ba700265cf3ed21294d4e" compoundref="_source_8cpp" startline="79" endline="81">AIHardDifficultyPath</references>
        <references refid="_source_8cpp_1a577dc0d6f138eeec92c0c13c052c3b73" compoundref="_source_8cpp" startline="76" endline="78">AINormalDifficultyPath</references>
        <references refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" compoundref="_source_8cpp" startline="31">AIPath</references>
        <references refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" compoundref="_source_8cpp" startline="26">AIPosition</references>
        <references refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" compoundref="_source_8cpp" startline="30">DeadZones</references>
        <references refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" compoundref="_source_8cpp" startline="19">mapWriteCount</references>
        <references refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" compoundref="_source_8cpp" startline="32">nextPath</references>
        <references refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" compoundref="_source_8cpp" startline="44" endline="64">noNoAreas</references>
        <references refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" compoundref="_source_8cpp" startline="20">pathSection</references>
        <references refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" compoundref="_source_8cpp" startline="40">positionDone</references>
        <references refid="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" compoundref="_source_8cpp" startline="41">writePathDone</references>
        <references refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" compoundref="_source_8cpp" startline="22">x</references>
        <references refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" compoundref="_source_8cpp" startline="23">y</references>
        <referencedby refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1a60de64d75454385b23995437f1d72669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="120" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="120" bodyend="153"/>
        <references refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" compoundref="_source_8cpp" startline="31">AIPath</references>
        <references refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" compoundref="_source_8cpp" startline="26">AIPosition</references>
        <references refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" compoundref="_source_8cpp" startline="30">DeadZones</references>
        <references refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" compoundref="_source_8cpp" startline="17">input2</references>
        <references refid="_source_8cpp_1a553a3ebce52098537a6c23da68c08c02" compoundref="_source_8cpp" startline="34">mapInput</references>
        <references refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" compoundref="_source_8cpp" startline="19">mapWriteCount</references>
        <references refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" compoundref="_source_8cpp" startline="44" endline="64">noNoAreas</references>
        <references refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" compoundref="_source_8cpp" startline="24">position</references>
        <references refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" compoundref="_source_8cpp" startline="40">positionDone</references>
        <references refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" compoundref="_source_8cpp" startline="18">runCount</references>
        <references refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" compoundref="_source_8cpp" startline="82" endline="112">writePath</references>
        <references refid="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" compoundref="_source_8cpp" startline="41">writePathDone</references>
        <references refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" compoundref="_source_8cpp" startline="22">x</references>
        <references refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" compoundref="_source_8cpp" startline="23">y</references>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="176" endline="204">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setDifficulty</definition>
        <argsstring>()</argsstring>
        <name>setDifficulty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="154" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="154" bodyend="172"/>
        <references refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" compoundref="_source_8cpp" startline="16">AIDifficulty</references>
        <references refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" compoundref="_source_8cpp" startline="17">input2</references>
        <references refid="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" compoundref="_source_8cpp" startline="42">menuDone</references>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="176" endline="204">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1ac1b66fe77173de9e5e8542b2823d6071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void info</definition>
        <argsstring>()</argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="173" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="173" bodyend="175"/>
        <referencedby refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="_source_8cpp" startline="176" endline="204">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" line="176" column="1" bodyfile="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp" bodystart="176" bodyend="204"/>
        <references refid="_source_8cpp_1ac1b66fe77173de9e5e8542b2823d6071" compoundref="_source_8cpp" startline="173" endline="175">info</references>
        <references refid="_source_8cpp_1a38deedb02dcebac366f97a0879b3be5b" compoundref="_source_8cpp" startline="36">input</references>
        <references refid="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" compoundref="_source_8cpp" startline="42">menuDone</references>
        <references refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" compoundref="_source_8cpp" startline="154" endline="172">setDifficulty</references>
        <references refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" compoundref="_source_8cpp" startline="120" endline="153">start</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;future&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" kindref="member">AIDifficulty</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17" refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref>;</highlight></codeline>
<codeline lineno="18" refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref>;</highlight></codeline>
<codeline lineno="19" refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" kindref="member">mapWriteCount</ref>;</highlight></codeline>
<codeline lineno="20" refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" kindref="member">pathSection</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="23" refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="24" refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" kindref="member">AIPosition</ref>;</highlight></codeline>
<codeline lineno="27" refid="_source_8cpp_1af7cad35aa8f546b41f3ae0dcc66e236c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1af7cad35aa8f546b41f3ae0dcc66e236c" kindref="member">AIYPosition</ref>;</highlight></codeline>
<codeline lineno="28" refid="_source_8cpp_1aaf161887666f0e3733b6d9153c47f9e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1aaf161887666f0e3733b6d9153c47f9e7" kindref="member">AIXPosition</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" kindref="member">DeadZones</ref>[100];</highlight></codeline>
<codeline lineno="31" refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" kindref="member">AIPath</ref>[20];</highlight></codeline>
<codeline lineno="32" refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" kindref="member">nextPath</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_source_8cpp_1a553a3ebce52098537a6c23da68c08c02" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a553a3ebce52098537a6c23da68c08c02" kindref="member">mapInput</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_source_8cpp_1a38deedb02dcebac366f97a0879b3be5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a38deedb02dcebac366f97a0879b3be5b" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_source_8cpp_1a991cbe3d6b3162a30b540fa5b28cdca0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a991cbe3d6b3162a30b540fa5b28cdca0" kindref="member">XorY</ref>;</highlight></codeline>
<codeline lineno="39" refid="_source_8cpp_1a2c2a512cd32842742d7f2b87c3ee60cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a2c2a512cd32842742d7f2b87c3ee60cb" kindref="member">added</ref>;</highlight></codeline>
<codeline lineno="40" refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" kindref="member">positionDone</ref>;</highlight></codeline>
<codeline lineno="41" refid="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" kindref="member">writePathDone</ref>;</highlight></codeline>
<codeline lineno="42" refid="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" kindref="member">menuDone</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" kindref="member">noNoAreas</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>enterZone,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areaClear;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>1<sp/>||<sp/>x<sp/>&gt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaClear<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>1<sp/>||<sp/>y<sp/>&gt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaClear<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref><sp/>&lt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enterZone<sp/>==<sp/><ref refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" kindref="member">DeadZones</ref>[<ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref>])<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaClear<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runCount++;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaClear<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>areaClear;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65" refid="_source_8cpp_1aab71e43233c0bb41334ffc0e35400cf4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1aab71e43233c0bb41334ffc0e35400cf4" kindref="member">AIEasyDifficultyPath</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num--;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76" refid="_source_8cpp_1a577dc0d6f138eeec92c0c13c052c3b73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a577dc0d6f138eeec92c0c13c052c3b73" kindref="member">AINormalDifficultyPath</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79" refid="_source_8cpp_1a5b3fcf3a700ba700265cf3ed21294d4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a5b3fcf3a700ba700265cf3ed21294d4e" kindref="member">AIHardDifficultyPath</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82" refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" kindref="member">writePath</ref>()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" kindref="member">writePathDone</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" kindref="member">pathSection</ref><sp/>=<sp/><ref refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" kindref="member">mapWriteCount</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" kindref="member">DeadZones</ref>[<ref refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" kindref="member">pathSection</ref>]<sp/>=<sp/><ref refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" kindref="member">AIPosition</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" kindref="member">pathSection</ref>++;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" kindref="member">nextPath</ref><sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" kindref="member">AIDifficulty</ref><sp/>=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref><sp/>=<sp/><ref refid="_source_8cpp_1aab71e43233c0bb41334ffc0e35400cf4" kindref="member">AIEasyDifficultyPath</ref>(<ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref><sp/>=<sp/><ref refid="_source_8cpp_1aab71e43233c0bb41334ffc0e35400cf4" kindref="member">AIEasyDifficultyPath</ref>(<ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" kindref="member">AIDifficulty</ref><sp/>=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a577dc0d6f138eeec92c0c13c052c3b73" kindref="member">AINormalDifficultyPath</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" kindref="member">AIDifficulty</ref><sp/>=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a5b3fcf3a700ba700265cf3ed21294d4e" kindref="member">AIHardDifficultyPath</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" kindref="member">AIPath</ref>[<ref refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" kindref="member">nextPath</ref>]<sp/>=<sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref><sp/>+<sp/>(<ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref><sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" kindref="member">positionDone</ref><sp/>=<sp/><ref refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" kindref="member">noNoAreas</ref>(<ref refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" kindref="member">AIPath</ref>[<ref refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" kindref="member">nextPath</ref>],<sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>,<sp/><ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" kindref="member">positionDone</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" kindref="member">DeadZones</ref>[<ref refid="_source_8cpp_1af53cb8831323c41857a6fcb3338d5da5" kindref="member">pathSection</ref>]<sp/>=<sp/><ref refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" kindref="member">AIPath</ref>[<ref refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" kindref="member">nextPath</ref>];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a0d81ae357892b96dda808e13e2596d5f" kindref="member">nextPath</ref>++;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment">runCount<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="comment">while<sp/>(x<sp/>&lt;<sp/>101)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>DeadZones[runCount]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runCount++;</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" kindref="member">start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;cls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Enter<sp/>a<sp/>*<sp/>or<sp/>-<sp/>15<sp/>times<sp/>with<sp/>spaces<sp/>inbetween&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>A<sp/>B<sp/>C<sp/>D<sp/>E<sp/>F<sp/>G<sp/>H<sp/>I<sp/>J<sp/>K<sp/>L<sp/>M<sp/>N<sp/>O&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" kindref="member">mapWriteCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" kindref="member">position</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" kindref="member">position</ref><sp/>&lt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" kindref="member">position</ref>++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cin<sp/>&gt;&gt;<sp/><ref refid="_source_8cpp_1a553a3ebce52098537a6c23da68c08c02" kindref="member">mapInput</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapInput<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a4b007a8ca9d4bd9b444796679a10290f" kindref="member">DeadZones</ref>[<ref refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" kindref="member">mapWriteCount</ref>]<sp/>=<sp/>input2<sp/>+<sp/>(<ref refid="_source_8cpp_1a76777b356ab2a080225682528119c4fe" kindref="member">position</ref><sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a8fb4e4efaec04cd06f2ca6cecdae3f14" kindref="member">mapWriteCount</ref>++;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input2++;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref><sp/>&lt;<sp/>3);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" kindref="member">positionDone</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref><sp/>=<sp/>rand()<sp/>%<sp/>15<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref><sp/>=<sp/>rand()<sp/>%<sp/>15<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" kindref="member">AIPosition</ref><sp/>=<sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref><sp/>+<sp/>(<ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref><sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a85422213cfd87f34e2b9d723a4389dc8" kindref="member">positionDone</ref><sp/>=<sp/><ref refid="_source_8cpp_1a43ae00784b16b5bd2fa7320aff77fdad" kindref="member">noNoAreas</ref>(<ref refid="_source_8cpp_1ad095d97f497157b17bb4d6ef7373ca29" kindref="member">AIPosition</ref>,<sp/><ref refid="_source_8cpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>,<sp/><ref refid="_source_8cpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1afb19276ed6eed3dec9b586447d9652e0" kindref="member">writePathDone</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a0c9c581b7b4d6dd7cf125253e398d621" kindref="member">writePath</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref><sp/>&lt;<sp/>21)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="_source_8cpp_1aed29cd10adfbc75fa4de56f897e452e5" kindref="member">AIPath</ref>[<ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref>]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1aadbf03975135869a2790a416962121d9" kindref="member">runCount</ref>++;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154" refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" kindref="member">setDifficulty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;cls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>Difficulty<sp/>of<sp/>the<sp/>AI<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n1.<sp/>Easy<sp/>(Makes<sp/>the<sp/>AI<sp/>random)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n2.<sp/>Normal<sp/>(The<sp/>AI<sp/>makes<sp/>slightly<sp/>random)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n3.<sp/>Hard<sp/>(This<sp/>AI<sp/>will<sp/>work<sp/>out<sp/>what<sp/>it<sp/>needs<sp/>to<sp/>do)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" kindref="member">menuDone</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cin<sp/>&gt;&gt;<sp/><ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input2<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>input2<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1ab02a1f7a5c38242f27aa62b8756fffe5" kindref="member">AIDifficulty</ref><sp/>=<sp/><ref refid="_source_8cpp_1a9da0fc25d7a6bfdfce4893655036c0bc" kindref="member">input2</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>valid<sp/>numbers<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;cls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173" refid="_source_8cpp_1ac1b66fe77173de9e5e8542b2823d6071" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1ac1b66fe77173de9e5e8542b2823d6071" kindref="member">info</ref>()<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;cls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176" refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_source_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(0));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="_source_8cpp_1afba898a0e30ad8e98f2c22ab5d8dc312" kindref="member">menuDone</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>to<sp/>the<sp/>Captain<sp/>Sonar<sp/>AI<sp/>program&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nPress<sp/>s<sp/>to<sp/>start&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nPress<sp/>d<sp/>to<sp/>set<sp/>difficulty&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nPress<sp/>i<sp/>for<sp/>info&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nPress<sp/>x<sp/>to<sp/>exit<sp/>the<sp/>program\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cin<sp/>&gt;&gt;<sp/><ref refid="_source_8cpp_1a38deedb02dcebac366f97a0879b3be5b" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>||<sp/>input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a60de64d75454385b23995437f1d72669" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>||<sp/>input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1a28af16941c845fe85c0ad486f67928c1" kindref="member">setDifficulty</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>||<sp/>input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_source_8cpp_1ac1b66fe77173de9e5e8542b2823d6071" kindref="member">info</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal"><sp/>||<sp/>input<sp/>==<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>correct<sp/>letters\a\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/optim/source/repos/Captian Sonar AI/Captian Sonar AI/Source.cpp"/>
  </compounddef>
</doxygen>
